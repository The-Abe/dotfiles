# Prefix
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

#Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'jimeh/tmuxifier'

# Options
set-window-option -g mode-keys vi
set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g history-limit 5000
set -g default-terminal "tmux-256color"
set -as terminal-features ",xterm-256color:RGB"
set -ga terminal-overrides ",*256col*:Tc"
setw -g monitor-activity off
set -g visual-activity on
set -sg repeat-time 600
set -s focus-events off
set -g status "on"
set -g set-titles on
set -g set-titles-string "TMUX #I:#W"
set -g default-shell /bin/bash
set-window-option -g automatic-rename on
set-window-option -g allow-rename on
set-option -g detach-on-destroy off

#Binds
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind -r tab last-window

# in normal tmux mode
bind Escape copy-mode
bind C-u copy-mode
bind p paste-buffer

# in copy mode…
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi V send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi Escape send-keys -X cancel

bind C-b split-window -v -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"
bind b split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind C-d killp
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind > swap-pane -D
bind < swap-pane -U
unbind n
unbind p
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind -r C-k swap-window -t +1\; select-window -t +1
bind -r C-j swap-window -t -1\; select-window -t -1
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
bind c new-window
bind , command-prompt "rename-window '%%'"
bind C-s new \; command-prompt "rename-session '%%'"
bind Enter run-shell 'toggleterm'
bind \\ set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
bind m set mouse\; display-message "mouse is now #{?mouse,on,off}"
bind / command-prompt -p "send pane to:" "join-pane -t ':%%'"

# - prefix for windows between 10 and 19
bind - switch-client -Tabove9
bind -Tabove9 0 select-window -t:10
bind -Tabove9 1 select-window -t:11
bind -Tabove9 2 select-window -t:12
bind -Tabove9 3 select-window -t:13
bind -Tabove9 4 select-window -t:14
bind -Tabove9 5 select-window -t:15
bind -Tabove9 6 select-window -t:16
bind -Tabove9 7 select-window -t:17
bind -Tabove9 8 select-window -t:18
bind -Tabove9 9 select-window -t:19

set-option -g status-position top
set -g pane-border-style fg='colour8'
set -g pane-active-border-style fg='colour7'
set -g message-style fg='colour7'
set -g status-style fg='colour7'
set -g status-interval 1
setw -g window-status-separator ' '
set -g status-right-length 120
set -g status-left ' '
set-window-option -g window-status-style fg='colour7'
set-window-option -g window-status-current-style fg='colour4'
set -g window-status-current-format "#[fg=colour7]●"
set -g window-status-format "#[fg=colour8]●"
set -g status-right '#[fg=colour4]#W #[fg=colour2]#S #[fg=colour7]Week:%V %A %d/%m %H:%M:%S '

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


run '~/.tmux/plugins/tpm/tpm'
