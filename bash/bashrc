# Author: Abe van der Wielen
# Github: https://github.com/the-abe
# Email: abevanderwielen@gmail.com

# History
# Ignore duplicate entries and entries that start with a space
HISTCONTROL=ignoredups:ignorespace
# Size of history file in memory
HISTSIZE=100000
# Size of history file on disk
HISTFILESIZE=2000000

export PATH=""
PATH=$PATH:$HOME/.local/bin
PATH=$PATH:$HOME/.cargo/bin
PATH=$PATH:$HOME/.fzf/bin
PATH=$PATH:$HOME/.npm-global/bin
PATH=$PATH:$HOME/.rbenv/bin
PATH=$PATH:$HOME/.rbenv/shims
PATH=$PATH:$HOME/go/bin
PATH=$PATH:/snap/bin
PATH=$PATH:/usr/bin
PATH=$PATH:/usr/local/bin
PATH=$PATH:/usr/local/go/bin
PATH=$PATH:/usr/local/sbin
PATH=$PATH:/usr/share/rvm/bin
PATH=$PATH:/usr/sbin
PATH=$PATH:/bin
PATH=$PATH:/sbin

# Editor and terminal settings
export EDITOR=$(which nvim)
export TERM=xterm-256color

# Append to the history file, don't overwrite it
shopt -s histappend

# Check window resizes. Mostly for tmux and PS1
shopt -s checkwinsize

# Globstar for recursive globbing
shopt -s globstar

# Lesspipe for less alows for viewing compressed files
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# Gvm and go
[[ -s "$HOME/.gvm/scripts/gvm" && -z "$GVM_ROOT" ]] && source "$HOME/.gvm/scripts/gvm"

# Rbenv and ruby
if [[ -x /usr/bin/rbenv && -z "$RBENV_SHELL" ]]
then
  eval "$(rbenv init -)"
fi
GLOBAL_RUBY=$(cd / && ruby -v)

# Tmux TERM fix
#alias tmux="env TERM=xterm-256color tmux"

# Bashrc and tmuxrc alias to edit and source
alias bashrc="$EDITOR ~/.bashrc; source ~/.bashrc"
alias tmuxrc="$EDITOR ~/.tmux.conf; tmux source-file ~/.tmux.conf"

alias dotfiles="curl -s https://raw.githubusercontent.com/The-Abe/dotfiles/main/install | bash"

# Sudo last command
alias sl="sudo !!"

# Apt aliases
function ai() {
  sudo apt install $(al)
}
function ar() {
  sudo apt remove $(al)
}
function al() {
  package=$(apt list 2>/dev/null | fzf)
  echo ${package%/*}
}
function as() {
  apt search $1 | less
}

# Sudo edit alias
alias svim="sudo -E nvim -u $HOME/.config/nvim/init.lua"

# Make an alias for all users in /etc/passwd
for SU_USER in $(grep "/bin/bash" /etc/passwd | cut -f 1 -d:)
do
  alias $SU_USER="sudo -u $SU_USER -E /bin/bash"
done

# Eza and zoxide aliases
alias ls="eza --icons --git"
if [[ -x $(which zoxide) && -z "$ZOXIDELOADED" ]]
then
  eval "$(zoxide init bash)"
  ZOXIDELOADED=true
fi
alias cd="z"

# FZF and bat
[[ -f ~/.fzf.bash && -z "$FZFSOURCED" ]] && source ~/.fzf.bash
FZFSOURCED=true
FZF_DEFAULT_OPTS="--preview 'bat --line-range=:200 --theme=Dracula --color=always --style=numbers,changes {} | head -500'"

# SSH Agent auto add
# If it works, don't touch. I always screw this up when I try to mess with it.
if [[ -f ~/.ssh/id_rsa.pub ]]
then
  if [[ ! -S ~/.ssh/ssh_auth_sock ]]
  then
    eval `ssh-agent`
    ssh-add -l | grep "The agent has no identities" && ssh-add
    ln -sf $SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
  fi
  export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
fi

# Use nvim if available
if [[ -x $(which nvim) ]]
then
  alias vim="nvim"
  alias vi="nvim"
fi

# Color functions

# 256 color foreground
function color() {
  echo -e "\033[38;5;$1m"
}

# 256 color background
function bgcolor() {
  echo -e "\033[48;5;$1m"
}

# 256 color foreground and background
function fbcolor() {
  echo -e "\033[38;5;$1m\033[48;5;$2m"
}

# RGB color foreground
function rgbcolor() {
  echo -e "\033[38;2;$1;$2;$3m"
}

# RGB color background
function rgbbgcolor() {
  echo -e "\033[48;2;$1;$2;$3m"
}

# RGB color foreground and background
function rgbfbcolor() {
  echo -e "$(rgbcolor $1 $2 $3)$(rgbbgcolor $4 $5 $6)"
}

# Bold text
function bold() {
  echo -e "\e[1m"
}

# Reset color
function reset_color() {
  echo -e "\e[m"
}

# Hex color to decimal colors for rgbcolor functions
function hex_to_dec() {
  color=$(echo $1 | tr '[:lower:]' '[:upper:]')
  red=$(echo $color | awk '{print substr($1,1,2)}')
  green=$(echo $color | awk '{print substr($1,3,2)}')
  blue=$(echo $color | awk '{print substr($1,5,2)}')
  red_dec=$(echo "ibase=16; $red"|bc)
  green_dec=$(echo "ibase=16; $green"|bc)
  blue_dec=$(echo "ibase=16; $blue"|bc)
  echo $red_dec $green_dec $blue_dec
}

# Git and hg status
branch_status() {
  branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
  if [[ $branch != "" ]]
  then
    echo -e "$(color 4)$branch $(color 8)$(git_dirty)"
  else
    branch=$(hg branch 2> /dev/null | awk '{print $1}')
    if [[ $branch != "" ]]
    then
      echo -e "$(color 4)$branch $(color 8)$(hg_dirty)"
    fi
  fi
}

# Git and hg dirty status
git_dirty() {
  stat=$(git status --porcelain | awk '{print $1}' | grep -v "^?" | sort | uniq -c | sed 's/^ \+//' | sed 's/ /:/g' | paste -sd ' ' -)
  [[ $stat != "" ]] && echo "$stat "
}
hg_dirty() {
  stat=$(hg status 2> /dev/null | awk '{print $1}' | grep -v "^?" | sort | uniq -c | sed 's/^ \+//' | sed 's/ /:/g' | paste -sd ' ' -)
  [[ $stat != "" ]] && echo "$stat "
}

# Rbenv status if not using global ruby
rbenv_status() {
  current=$(rbenv local 2>/dev/null)
  if [[ "$current" != "" && "$current" != "$GLOBAL_RUBY" ]]
  then
    echo -e "$(color 1) $current "
  fi
}

# Set the prompt with PROMPT_COMMAND
setprompt() {
  res=$?
  if [ $res != 0 ]
  then
    return_code="$(color 1)✘($res) "
  else
    return_code=""
  fi
  PS1='\n$return_code$(reset_color)$(color 2)\u@\h $(reset_color)\w $(branch_status)$(reset_color)$(rbenv_status)$(reset_color)\n\$ '
}
PROMPT_COMMAND="setprompt"

# Show the 16 default colours in the terminal.
function colors() {
  echo
  for I in $(seq -w 1 1 16)
  do
    if [[ ${I} == 16 ]]
    then
      c=15
    else
      c=0
    fi
    printf "$(color $c)\033[48;5;${I}m ${I} $(reset_color)"
    if [[ ${I} =~ 8$ ]]
    then
      echo
    fi
  done
  echo
}

# TLDR Colors
export TLDR_TITLE_STYLE="Newline Bold Underline"
export TLDR_DESCRIPTION_STYLE=""
export TLDR_EXAMPLE_STYLE="Newline Blue"
export TLDR_CODE_STYLE=""
export TLDR_VALUE_ISTYLE="Green"
export TLDR_DEFAULT_ISTYLE="White"
export TLDR_URL_ISTYLE="Blue"
export TLDR_HEADER_ISTYLE=""
export TLDR_OPTION_ISTYLE="Yellow"
export TLDR_PLATFORM_ISTYLE="Blue"
export TLDR_COMMAND_ISTYLE="Cyan"
export TLDR_FILE_ISTYLE="Magenta"
export TLDR_ERROR_COLOR="Newline Red"
export TLDR_INFO_COLOR="Newline Green"
export TLDR_LANG="en"

# Load aliases if they exist
[ -f "$HOME/.bash_aliases" ] && . "$HOME/.bash_aliases"
