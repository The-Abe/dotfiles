# Set vars and options
HISTCONTROL=ignoredups:ignorespace
HISTSIZE=100000
HISTFILESIZE=2000000
export TERM=xterm-256color
shopt -s histappend
shopt -s checkwinsize
shopt -s globstar
shopt -s no_empty_cmd_completion

bind 'set show-all-if-ambiguous on'
bind 'TAB:menu-complete'
eval "$(lesspipe)"

# Colours for grep and ls
if [ -x /usr/bin/dircolors ]; then
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
fi

# Set PATH and related stuff
export EDITOR=vim
export CDPATH=$CDPATH:$HOME/projects/:/var/www/rails/:/var/www/api/:/var/www/consumers/
export GOPATH="$HOME/projects/go"; export GOROOT="$HOME/.go"; export PATH="$GOPATH/bin:$PATH";
export PATH="$PATH:~/bin:/usr/local/go/bin"
export PATH=~/.npm-global/bin:$PATH
if [ -x /usr/bin/rbenv ]
then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

# Aliases
[ -f "$HOME/.bash_aliases" ] && . "$HOME/.bash_aliases"
alias tmux="env TERM=xterm-256color tmux"
alias bashrc="$EDITOR ~/.bashrc; source ~/.bashrc"
alias tmuxrc="$EDITOR ~/.tmux.conf; tmux source-file ~/.tmux.conf"
alias aliases="$EDITOR ~/.bash_aliases; source ~/.bash_aliases"
alias o="xdg-open"
if [ -x /usr/bin/nvim ]
then
	alias vim="nvim"
fi

for SU_USER in $(grep "/bin/bash" /etc/passwd | cut -f 1 -d:)
do
  alias $SU_USER="sudo -u $SU_USER -E /bin/bash"
done

function cap() {
  tee /tmp/capture_$USER.out
}

function ret() {
  cat /tmp/capture_$USER.out
  rm /tmp/capture_$USER.out
}

function installremote() {
  echo $1
  scp $(readlink ~/.bashrc) $1:.bashrc || return
  scp $(readlink ~/.vimrc) $1:.vimrc || return
  scp $(readlink ~/.inputrc) $1:.inputrc || return
  ssh $1 "sh -c 'curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'" || return
}

# Navigation aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias etc='cd /etc/'
alias logs='cd /var/log/'

export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
if [[ -f ~/.ssh/id_rsa.pub && ! -S $SSH_AUTH_SOCK ]]
  then
    eval `ssh-agent`
    ssh-add -l | grep "The agent has no identities" && ssh-add
fi

# PS1 and related stuff
function color() {
  echo -e "\033[38;5;$1m"
}
alias bold="echo -e \"\e[1m\""
alias reset_color="echo -e \"\e[m\""

branch_status() {
  branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
  if [[ $branch != "" ]]
  then
    echo -e "\n  $(color 6)git$(color 5) $branch $(git_dirty)"
  else
    branch=$(hg branch 2> /dev/null | awk '{print $1}')
    if [[ $branch != "" ]]
    then
      echo -e "\n  $(color 6)hg$(color 5) $branch $(hg_dirty)"
    fi
  fi
}

git_dirty() {
  stat=$(git status --porcelain | awk '{print $1}' | sort | uniq -c | sed 's/^ \+//' | sed 's/ /:/g' | paste -sd ' ' -)
  if [[ $stat != "" ]]
  then
    echo "$(color 8)$stat"
  fi
}

hg_dirty() {
  stat=$(hg status 2> /dev/null | awk '{print $1}' | sort | uniq -c | sed 's/^ \+//' | sed 's/ /:/g' | paste -sd ' ' -)
  if [[ $stat != "" ]]
  then
    echo "$(color 8)$stat"
  fi
}

return_code() {
  res=$?
  if [ $res != 0 ]
  then
    echo -e "$(bold)$(color 1)✘($res) "
  else
    echo -e "$(bold)$(color 2)✔ "
  fi
}

rbenv_status() {
  global=$(cd / && ruby -v)
  current=$(ruby -v)
  if [[ "$current" != "$global" ]]
  then
    current=$(echo $current | cut -d\  -f2)
    echo -e "\n  $(color 1)Ruby $(color 8)$current"
  fi
}

PS1='\n$(return_code)$(color 3)\u@\h $(reset_color)\w $(branch_status)$(rbenv_status)$(reset_color)\n\$ '
