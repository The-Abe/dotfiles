#!/bin/bash

# This script is meant to be run by running it through bash from a curl
# request.

# Validate requirements
required_commands=(git curl gem)
for command in "${required_commands[@]}"; do
	if [ ! -x "$(command -v $command)" ]; then
		echo "$command is not installed, please install $command."
		exit 1
	fi
done

# Create $HOME/.local/bin if it doesn't exists
if [ ! -d $HOME/.local/bin ]; then
	mkdir -p $HOME/.local/bin
fi

# Create $HOME/projects if it doesn't exists
if [ ! -d $HOME/projects ]; then
	mkdir -p $HOME/projects
fi

# Git clone the repo to $HOME/projects/dotfiles
if [ ! -d $HOME/projects/dotfiles ]; then
	git clone https://github.com/The-Abe/dotfiles.git $HOME/projects/dotfiles
else
	echo "dotfiles already exists, pulling latest changes."
	cd $HOME/projects/dotfiles
	git pull
fi

# Link bin files
for file in $HOME/projects/dotfiles/.local/bin/*; do
	if [ ! -L $HOME/.local/bin/$(basename $file) ]; then
		ln -sf $file $HOME/.local/bin/$(basename $file)
	fi
done

# Link config files
for file in $HOME/projects/dotfiles/.config/*; do
	if [ ! -L $HOME/.config/$(basename $file) ]; then
		ln -sf $file $HOME/.config/$(basename $file)
	fi
done

# Link dotfiles
for file in $HOME/projects/dotfiles/.*; do
	[ -d $file ] && continue

	if [ ! -L $HOME/$(basename $file) ]; then
		rm -f $HOME/$(basename $file)
		ln -sf $file $HOME/$(basename $file)
	fi
done

# Install Nvim
if [ ! -x "$(command -v nvim)" ]; then
	echo "Installing Nvim"
	curl -LOs https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
	chmod u+x nvim.appimage
	mv nvim.appimage $HOME/.local/bin/nvim
fi

# Install fd
if [ ! -x "$(command -v fd)" ]; then
	echo "Installing fd"
	curl -LOs https://github.com/sharkdp/fd/releases/download/v8.7.1/fd-v8.7.1-x86_64-unknown-linux-musl.tar.gz
	tar -C /tmp/ -xf fd-v8.7.1-x86_64-unknown-linux-musl.tar.gz
	mv /tmp/fd-v8.7.1-x86_64-unknown-linux-musl/fd $HOME/.local/bin/
	rm -rf /tmp/fd-v8.7.1-x86_64-unknown-linux-musl
	rm fd-v8.7.1-x86_64-unknown-linux-musl.tar.gz
fi

# Install ripgrep
if [ ! -x "$(command -v rg)" ]; then
	echo "Installing ripgrep"
	curl -LOs https://github.com/BurntSushi/ripgrep/releases/download/14.0.3/ripgrep-14.0.3-x86_64-unknown-linux-musl.tar.gz
	tar -C /tmp/ -xf ripgrep-14.0.3-x86_64-unknown-linux-musl.tar.gz
	mv /tmp/ripgrep-14.0.3-x86_64-unknown-linux-musl/rg $HOME/.local/bin/
	rm -rf /tmp/ripgrep-14.0.3-x86_64-unknown-linux-musl
	rm ripgrep-14.0.3-x86_64-unknown-linux-musl.tar.gz
fi

# Install bat
if [ ! -x "$(command -v bat)" ]; then
	echo "Installing bat"
	curl -LOs https://github.com/sharkdp/bat/releases/download/v0.24.0/bat-v0.24.0-x86_64-unknown-linux-musl.tar.gz
	tar -C /tmp/ -xf bat-v0.24.0-x86_64-unknown-linux-musl.tar.gz
	mv /tmp/bat-v0.24.0-x86_64-unknown-linux-musl/bat $HOME/.local/bin/
	rm -rf /tmp/bat-v0.24.0-x86_64-unknown-linux-musl
	rm bat-v0.24.0-x86_64-unknown-linux-musl.tar.gz
fi

# Install fzf
if [ ! -x "$(command -v fzf)" ]; then
	git clone --depth 1 https://github.com/junegunn/fzf.git $HOME/.fzf
	$HOME/.fzf/install
fi

# Install tmux
if [ ! -x "$(command -v tmux)" ]; then
	echo "Installing tmux"
	curl -LOs https://github.com/nelsonenzo/tmux-appimage/releases/download/3.2a/tmux.appimage
	chmod u+x tmux.appimage
	mv tmux.appimage $HOME/.local/bin/tmux
fi

# Install eza
if [ ! -x "$(command -v eza)" ]; then
	echo "Installing eza"
	curl -LOs https://github.com/eza-community/eza/releases/download/v0.13.0/eza_x86_64-unknown-linux-gnu.tar.gz
	tar -C /tmp/ -xf eza_x86_64-unknown-linux-gnu.tar.gz
	mv /tmp/eza $HOME/.local/bin/
	rm eza_x86_64-unknown-linux-gnu.tar.gz
fi

# Install zoxide
if [ ! -x "$(command -v zoxide)" ]; then
	echo "Installing zoxide"
	curl -s https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
fi

# Install tpm
if [ ! -d $HOME/.tmux/plugins/tpm ]; then
	[ -d $HOME/.tmux/plugins ] || mkdir -p $HOME/.tmux/plugins
	git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
fi
